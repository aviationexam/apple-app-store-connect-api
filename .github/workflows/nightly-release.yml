name: Nightly MyGet Package Deploy

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    steps:
      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
      - uses: actions/checkout@v4
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.0.0
      - run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
      - name: Tool restore
        run: dotnet tool restore
      - uses: ./.github/actions/build-kiota
        id: kiota
      - name: Restore
        run: dotnet restore --nologo
        env:
          KIOTA_BIN: ${{ steps.kiota.outputs.command }}
      - name: Create version
        run: |
          ENHANCED_VERSION="${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}"
          if [[ "${{ steps.gitversion.outputs.Patch }}" -ne '' ]]; then ENHANCED_VERSION="${ENHANCED_VERSION}.${{ steps.gitversion.outputs.Patch }}" fi
          if [[ -f "src/Apple.AppStoreConnect/api-version.txt" ]]; then ENHANCED_VERSION="${ENHANCED_VERSION}.$(sed '2q;d' src/Apple.AppStoreConnect/api-version.txt)" fi
          if [[ "${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}" -ne '' ]]; ENHANCED_VERSION="${ENHANCED_VERSION}-${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}" fi
          echo "enhancedVersion=${ENHANCED_VERSION}" >> "$GITHUB_OUTPUT"
        id: version
      - name: Build with .Net
        run: dotnet build --configuration Release --no-restore --nologo "-p:Version=${{ steps.version.outputs.enhancedVersion }}"
      - name: Pack with .Net
        run: |
          dotnet pack --nologo --no-build --configuration Release --output nuget-packages -p:PackageVersion=${{ steps.version.outputs.enhancedVersion }} src/Apple.AppStoreConnect/Apple.AppStoreConnect.csproj
      - uses: actions/upload-artifact@v4
        with:
          name: Nuget-packages-${{ steps.version.outputs.enhancedVersion }}
          path: nuget-packages
      - name: Push package to Myget
        if: ${{ vars.USE_MYGET == 'true' }}
        run: dotnet nuget push 'nuget-packages/*.nupkg' --api-key ${{ secrets.MYGET_API_KEY }} --source https://www.myget.org/F/apple-app-store-connect/api/v3/index.json
      - name: Push package to Feedz
        if: ${{ vars.USE_FEEDZ == 'true' }}
        run: dotnet nuget push 'nuget-packages/*.nupkg' --api-key ${{ secrets.FEEDZ_API_KEY }} --source https://f.feedz.io/aviationexam/apple-app-store-connect-api/nuget/index.json
